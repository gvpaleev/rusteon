// ะะฐะดะฐะฝะธะต. ะะฐะทัะฒะฐะตะผ ะผะฝะพะณะพัะณะพะปัะฝะธะบะธ
// ะะฝะพะณะพัะณะพะปัะฝะธะบ โ ะฟะปะพัะบะฐั ะณะตะพะผะตััะธัะตัะบะฐั ัะธะณััะฐ ั ััะตะผั ะธะปะธ ะฑะพะปะตะต ััะพัะพะฝะฐะผะธ, ะฟะตัะตัะตะบะฐััะธะผะธัั ะฒ ััะตั ะธะปะธ ะฑะพะปะตะต ัะพัะบะฐั (ะฒะตััะธะฝะฐั).
//
// ะะฐะตััั ัะธัะปะพ, ะบะพัะพัะพะต ะพะทะฝะฐัะฐะตั ะบะพะปะธัะตััะฒะพ ััะพัะพะฝ ัะธะณััั, ะฒะฐะผ ะฝัะถะฝะพ ัะฐัะฟะตัะฐัะฐัั ะฝะฐะทะฒะฐะฝะธะต ัะธะณััั. ะะฐะฟัะธะผะตั,
// ะดะฐะตััั ัะธัะปะพ 5 - ะฟัะพะณัะฐะผะผะฐ ะฟะตัะฐัะฐะตั ัะปะพะฒะพ ะฟััะธัะณะพะปัะฝะธะบ.
//
// ะัะธะผะตัะฐะฝะธะต: ะะฝะพะณะพ ัะธะณัั ะฝะต ะฝัะถะฝะพ ะพะฑัะฐะฑะฐััะฒะฐัั, ะดะปั ะพััะฐะปัะฝัั ะผะพะถะตัะต ะฟัะธะดัะผะฐัั ะบะฐะบัั-ะฝะธะฑัะดั ัะธััะพััั.

use std::io::{self, Write};

fn main() {
    print!("ะะฒะตะดะธัะต ะบะพะปะธัะตััะฒะพ ััะพัะพะฝ: ");
    io::stdout().flush().unwrap(); // ััะพะฑั prompt ะฟะพัะฒะธะปัั ััะฐะทั

    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("ะัะธะฑะบะฐ ะฒะฒะพะดะฐ");

    let sides: u32 = match input.trim().parse() {
        Ok(num) => num,
        Err(_) => {
            println!("ะัะถะฝะพ ะฒะฒะตััะธ ัะตะปะพะต ะฟะพะปะพะถะธัะตะปัะฝะพะต ัะธัะปะพ!");
            return;
        }
    };

    let name = match sides {
        3 => "ััะตัะณะพะปัะฝะธะบ",
        4 => "ัะตััััััะณะพะปัะฝะธะบ",
        5 => "ะฟััะธัะณะพะปัะฝะธะบ",
        6 => "ัะตััะธัะณะพะปัะฝะธะบ",
        7 => "ัะตะผะธัะณะพะปัะฝะธะบ",
        8 => "ะฒะพััะผะธัะณะพะปัะฝะธะบ",
        _ if sides >= 9 => "ะบะฐะบะพะน-ัะพ ัะปะพะถะฝัะน ะผะฝะพะณะพะณัะฐะฝะฝะธะบ ๐ง",
        _ => "ััะพ ะฝะต ะผะฝะพะณะพัะณะพะปัะฝะธะบ ๐ค",
    };

    println!("ะญัะพ โ {}", name);
}
